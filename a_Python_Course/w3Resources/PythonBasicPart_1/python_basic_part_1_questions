1. Write a Python program to print the following string in a specific format.
string : "Twinkle, twinkle, little star, How I wonder what you are!
Up above the world so high, Like a diamond in the sky.
Twinkle, twinkle, little star, How I wonder what you are"

Output :
Twinkle, twinkle, little star,
	How I wonder what you are!
		Up above the world so high,
		Like a diamond in the sky.
Twinkle, twinkle, little star,
	How I wonder what you are

2. Write a Python program to get the Python version you are using.

3. Write a Python program to display the current date and time.

4. Write a Python program which accepts the radius of a circle from the user and compute the area.

5. Write a Python program which accepts the user's first and last name and print them in
   reverse order with a space between them.

6. Write a Python program which accepts a sequence of comma-separated numbers from user
   and generate a list and a tuple with those numbers.
   Sample data : 3, 5, 7, 23

7. Write a Python program to accept a filename from the user and print the extension of that.

8. Write a Python program to display the first and last colors from the following list.
   color_list = ["Red","Green","White" ,"Black"]

9. Write a Python program to display the examination schedule.(extract the date from exam_st_date).
   exam_st_date = (11, 12, 2014)
   Sample Output : The examination will start from : 11 / 12 / 2014

10. Write a Python program that accepts an integer (n) and computes the value of n+nn+nnn.
    Sample Output : 5 + 55 + 555

11. Write a Python program to print the documents (syntax, description etc.) of Python built-in function(s).
    Sample function : abs()
    Expected Result :
    abs(number) -> number
    Return the absolute value of the argument.

12. Write a Python program that prints the calendar for a given month and year.
    Note : Use 'calendar' module.

13. Write a Python program to print the following 'here document'.
    Sample string :
    a string that you "don't" have to escape
    This
    is a ....... multi-line
    heredoc string --------> example

14. Write a Python program to calculate the number of days between two dates.
    Sample dates : (2014, 7, 2), (2014, 7, 11)
    Expected output : 9 days

15. Write a Python program to get the volume of a sphere with radius six.

16. Write a Python program to calculate the difference between a given number and 17.
    If the number is greater than 17, return twice the absolute difference.

17. Write a Python program to test whether a number is within 100 of 1000 or 2000.

18. Write a Python program to calculate the sum of three given numbers.
    If the values are equal, return three times their sum.

19. Write a Python program to get a newly-generated string from a given string
    where "Is" has been added to the front.Return the string unchanged
    if the given string already begins with "Is".

20. Write a Python program that returns a string that is n (non-negative integer) copies of a given string.

21. Write a Python program that determines whether a given number (accepted from the user) is even or odd,
    and prints an appropriate message to the user.

22. Write a Python program to count the number 4 in a given list.

23. Write a Python program to get n (non-negative integer) copies of the first 2 characters of a given string.
    Return n copies of the whole string if the length is less than 2.

24. Write a Python program to test whether a passed letter is a vowel or not.

25. Write a Python program that checks whether a specified value is contained within a group of values.
    Test Data :
    3 -> [1, 5, 8, 3] : True
    -1 -> [1, 5, 8, 3] : False

26. Write a Python program to create a histogram from a given list of integers.

27. Write a Python program that concatenates all elements in a list into a string and returns it.

28. Write a Python program to print all even numbers from a given list of numbers in the same order
    and stop printing any after 237 in the sequence.
    numbers = [
    386, 462, 47, 418, 907, 344, 236, 375, 823, 566, 597, 978, 328, 615, 953, 345,
    399, 162, 758, 219, 918, 237, 412, 566, 826, 248, 866, 950, 626, 949, 687, 217,
    815, 67, 104, 58, 512, 24, 892, 894, 767, 553, 81, 379, 843, 831, 445, 742, 717,
    958,743, 527
    ]

29. Write a Python program that prints out all colors from color_list_1 that are not present in color_list_2.
    Test Data :
    color_list_1 = set(["White", "Black", "Red"])
    color_list_2 = set(["Red", "Green"])
    Expected Output :
    {'Black', 'White'}

30. Write a Python program that will accept the base and height of a triangle and compute its area.

31. Write a Python program that computes the greatest common divisor (GCD) of two positive integers.

32. Write a Python program to find the least common multiple (LCM) of two positive integers.

33. Write a Python program to sum three given integers. However, if two values are equal, the sum will be zero.

34. Write a Python program to sum two given integers. However, if the sum is between 15 and 20 it will return 20.

35. Write a Python program that returns true if the two given integer values are equal or their sum or difference is 5.

36. Write a Python program to add two objects if both objects are integers.

37. Write a Python program that displays your name, age, and address on three different lines.

38. Write a Python program to solve (x + y) * (x + y)

40. Write a Python program to calculate the distance between the points (x1, y1) and (x2, y2).

41. Write a Python program to check whether a file exists.

42. Write a Python program to determine if a Python shell is executing in 32bit or 64bit mode on OS.

43. Write a Python program to get OS name, platform and release information.

44. Write a Python program to locate Python site packages.

45. Write a Python program that calls an external command.

46. Write a Python program to retrieve the path and name of the file currently being executed.

47. Write a Python program to find out the number of CPUs used.

48. Write a Python program to parse a string to float or integer.

50. Write a Python program to print without a newline or space.



